name: Generate PR YAML

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  generate-yaml:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Extract PR details
      - name: Get Pull Request Details
        id: pr-details
        run: |
          echo "pr_branch=refs/pull/${{ github.event.pull_request.number }}/head" >> $GITHUB_ENV
          echo "pr_url=${{ github.event.pull_request.html_url }}" >> $GITHUB_ENV

      # Step 3: Create the YAML file
      - name: Create YAML file
        run: |
          echo "# From https://github.com/microsoft/devcenter-examples" > devbox.yaml
          echo "\$schema: 1.0" >> devbox.yaml
          echo "############ Project related Softwares in Dev Box Windows OS ############" >> devbox.yaml
          echo "" >> devbox.yaml
          echo "userTasks:" >> devbox.yaml
          echo "  - name: powershell" >> devbox.yaml
          echo "    parameters:" >> devbox.yaml
          echo "      command: |" >> devbox.yaml
          echo "        \$env:Path = [System.Environment]::GetEnvironmentVariable('Path','Machine') + ';' + [System.Environment]::GetEnvironmentVariable('Path','User')" >> devbox.yaml
          echo "        git fetch origin +refs/pull/${{ github.event.pull_request.number }}/head:pr-${{ github.event.pull_request.number }}" >> devbox.yaml
          echo "        git checkout pr-${{ github.event.pull_request.number }}" >> devbox.yaml

      # Step 4: Upload the generated YAML as an artifact
      - name: Upload YAML artifact
        uses: actions/upload-artifact@v3
        with:
          name: devbox-yaml
          path: devbox.yaml

      # Step 5: Fetch Artifact URL using GitHub API
      - name: Get Artifact URL
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch the current workflow run's artifacts
          response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)
          
          # Extract the artifact download URL
          artifact_url=$(echo $response | jq -r '.artifacts[] | select(.name=="devbox-yaml") | .archive_download_url')

          echo "The YAML file has been successfully generated and uploaded."
          echo "To download the artifact, see the link below"
          
          # Output the artifact URL
          echo "Artifact URL: $artifact_url"

          echo "Once downloaded, upload the customization file when creating a new dev box"
